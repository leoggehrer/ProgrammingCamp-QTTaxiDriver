//@GeneratedCode
namespace QTTaxiDriver.WebApi.Controllers.Base
{
    ///
    /// Generated by the generator
    ///
    public sealed partial class VehiclesController : Controllers.GenericController<QTTaxiDriver.Logic.Models.Base.Vehicle, QTTaxiDriver.WebApi.Models.Base.VehicleEdit, QTTaxiDriver.WebApi.Models.Base.Vehicle>
    {
        ///
        /// Generated by the generator
        ///
        static VehiclesController()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        
        ///
        /// Generated by the generator
        ///
        public VehiclesController(QTTaxiDriver.Logic.Contracts.Base.IVehiclesAccess other)
        : base(other)
        {
            Constructing();
            
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        ///
        /// Generated by the generator
        ///
        protected override QTTaxiDriver.WebApi.Models.Base.Vehicle ToOutModel(QTTaxiDriver.Logic.Models.Base.Vehicle accessModel)
        {
            var handled = false;
            var result = default(QTTaxiDriver.WebApi.Models.Base.Vehicle);
            BeforeToOutModel(accessModel, ref result, ref handled);
            if (handled == false || result == null)
            {
                result = QTTaxiDriver.WebApi.Models.Base.Vehicle.Create(accessModel);
            }
            AfterToOutModel(result);
            return result;
        }
        partial void BeforeToOutModel(QTTaxiDriver.Logic.Models.Base.Vehicle accessModel, ref QTTaxiDriver.WebApi.Models.Base.Vehicle? outModel, ref bool handled);
        partial void AfterToOutModel(QTTaxiDriver.WebApi.Models.Base.Vehicle outModel);
    }
}
